"""create tables

Revision ID: 146d52710ce9
Revises: 
Create Date: 2025-06-14 21:37:28.600034

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '146d52710ce9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nota_fiscal_chave_acesso'), table_name='nota_fiscal')
    op.drop_table('nota_fiscal')
    op.drop_table('item_da_nota')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item_da_nota',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nota_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('sku', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('quantidade', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('valor_unitario', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('cfop', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ncm', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cst', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('impostos', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['nota_id'], ['nota_fiscal.id'], name=op.f('item_da_nota_nota_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('item_da_nota_pkey'))
    )
    op.create_table('nota_fiscal',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('chave_acesso', sa.VARCHAR(length=44), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('EM_PROCESSAMENTO', 'AUTORIZADA', 'REJEITADA', 'CANCELADA', name='statusnotamodel'), autoincrement=False, nullable=False),
    sa.Column('data_emissao', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('protocolo_autorizacao', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('emitente_cnpj', sa.VARCHAR(length=14), autoincrement=False, nullable=False),
    sa.Column('destinatario_cnpj', sa.VARCHAR(length=14), autoincrement=False, nullable=False),
    sa.Column('emitente_endereco', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('destinatario_endereco', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('impostos_totais', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('nota_fiscal_pkey'))
    )
    op.create_index(op.f('ix_nota_fiscal_chave_acesso'), 'nota_fiscal', ['chave_acesso'], unique=True)
    # ### end Alembic commands ###
